(defpackage :neuropa
  (:use #:cl #:incudine #:incudine.vug #:incudine.util #:incudine.analysis)
  (:import-from #:alexandria #:define-constant #:non-negative-fixnum)
  (:export #:tinnitus-pulses-21-hz))

(in-package :neuropa)

;;; Coefficients derived from the figure 4 in "Numerical Analysis of
;;; the Microwave Auditory Effect (N. M. Yitzhak, R. Ruppin, R. Hareuveny).
(defvar *conduction-filter-coeffs*
  '(1290 0
    1300 0.61013985
    1516 0.22202797
    2938 0.20104896
    3317 0.19405594
    4478 0.3688811
    6398 0.23251748
    7346 0.33916083
    7772 1.0
    8128 0.18881118
    9976 0.3618881
    10142 0.108391605
    11374 0.06818182
    12535 0.12062937
    12938 0.06993007
    14597 0.22202797
    15734 0.26923078
    16706 0.06818182
    18080 0.052447554
    18720 0.031468533
    19597 0.02097902
    19600 0))

(define-constant +conduction-filter-size+ 2048)

(defvar *conduction-filter*
  (with-buffer (b +conduction-filter-size+
                :fill-function (gen:fir *conduction-filter-coeffs*))
    (buffer->pvbuffer b 256)))

(dsp! tinnitus-pulses-21-hz ((flt pvbuffer) amp)
  "Tinnitus from pattern pulses: A A A A B A A A A B A A A A B ...

A = 0.0461 s = 80 / 1733  => 21.69 Hz
B = 0.0511 s = 75 / 1469  => 19.57 Hz
freq_avg = 5 / ((A * 4) + B) = 21.23 Hz"
  (:defaults *conduction-filter* .9)
  (with ((i 0)
         (next +sample-zero+)
         (time +sample-zero+))
    (declare (non-negative-fixnum i) (sample time))
    (initialize (setf next (now)))
    (out (part-convolve
           (cond ((>= (now) next)
                  (incf next (* (if (< i 4) 0.0461d0 0.0511d0) *sample-rate*))
                  (setf i (mod (1+ i) 5))
                  amp)
                 (t +sample-zero+))
           flt))))

#|
(bounce-to-disk ("/tmp/tinnitus-21-hz.wav" :channels 1 :duration 5)
  (neuropa:tinnitus-pulses-21-hz))
|#
